From 2481120b43d9262c62de02e28385f5b5f5e52bde Mon Sep 17 00:00:00 2001
From: Weijie Wang <weijiew@codeaurora.org>
Date: Tue, 11 Sep 2018 18:02:21 +0800
Subject: [PATCH 176/230] SystemUI: Refactor the feature of volte icon

1. Move volte state to MobileState
2. Notify UI to update only when it is necessary

Change-Id: I80572f7db7a3839b7261dceb625b358039799959
CRs-Fixed: 2318167
---
 .../policy/MobileSignalController.java        | 26 +++++++++----------
 .../policy/NetworkControllerImpl.java         |  2 ++
 2 files changed, 15 insertions(+), 13 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java
index 0c2b2fe41f5..da74dbbca5b 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/MobileSignalController.java
@@ -93,8 +93,6 @@ public class MobileSignalController extends SignalController<
     boolean mInflateSignalStrengths = false;
 
     private ImsManager mImsManager;
-    private boolean mImsResitered;
-    private final boolean mShowVolteIcon;
     private int mCallState = TelephonyManager.CALL_STATE_IDLE;
 
     // TODO: Reduce number of vars passed in, if we have the NetworkController, probably don't
@@ -117,8 +115,6 @@ public class MobileSignalController extends SignalController<
         mNetworkNameDefault = getTextIfExists(
                 com.android.internal.R.string.lockscreen_carrier_default).toString();
 
-        mShowVolteIcon = context.getResources().getBoolean(R.bool.config_display_volte);
-
         mapIconSets();
 
         String networkName = info.getCarrierName() != null ? info.getCarrierName().toString()
@@ -397,15 +393,15 @@ public class MobileSignalController extends SignalController<
     private int getVolteResId() {
         int resId = 0;
 
-        if ( mImsResitered ) {
+        if ( mCurrentState.imsResitered ) {
             resId = R.drawable.ic_volte;
         }
         return resId;
     }
 
     private void updateImsRegistrationState() {
-        mImsResitered = mPhone.isImsRegistered(mSubscriptionInfo.getSubscriptionId());
-        Log.d(mTag, "updateImsRegistrationState mImsResitered=" + mImsResitered);
+        mCurrentState.imsResitered = mPhone.isImsRegistered(mSubscriptionInfo.getSubscriptionId());
+        notifyListenersIfNecessary();
     }
 
     @Override
@@ -450,7 +446,8 @@ public class MobileSignalController extends SignalController<
                 && mCurrentState.activityOut;
         showDataIcon &= mCurrentState.isDefault || dataDisabled;
         int typeIcon = (showDataIcon || mConfig.alwaysShowDataRatIcon) ? icons.mDataType : 0;
-        int volteIcon = mShowVolteIcon && isEnhanced4gLteModeSettingEnabled() ? getVolteResId() : 0;
+        int volteIcon = mConfig.showVolteIcon && isEnhanced4gLteModeSettingEnabled()
+                ? getVolteResId() : 0;
         callback.setMobileDataIndicators(statusIcon, qsIcon, typeIcon, qsTypeIcon,
                 activityIn, activityOut, volteIcon, dataContentDescription, dataContentDescriptionHtml,
                 description, icons.mIsWide, mSubscriptionInfo.getSubscriptionId(),
@@ -762,7 +759,6 @@ public class MobileSignalController extends SignalController<
                         @ImsRegistrationImplBase.ImsRegistrationTech int imsRadioTech) {
                     Log.d(mTag, "onRegistered imsRadioTech=" + imsRadioTech);
                     updateImsRegistrationState();
-                    notifyListeners();
                 }
 
                 @Override
@@ -770,21 +766,21 @@ public class MobileSignalController extends SignalController<
                         @ImsRegistrationImplBase.ImsRegistrationTech int imsRadioTech) {
                     Log.d(mTag, "onRegistering imsRadioTech=" + imsRadioTech);
                     updateImsRegistrationState();
-                    notifyListeners();
                 }
 
                 @Override
                 public void onDeregistered(ImsReasonInfo imsReasonInfo) {
                     Log.d(mTag, "onDeregistered imsReasonInfo=" + imsReasonInfo);
                     updateImsRegistrationState();
-                    notifyListeners();
                 }
             };
 
     private final BroadcastReceiver mVolteSwitchObserver = new BroadcastReceiver() {
         public void onReceive(Context context, Intent intent) {
             Log.d(mTag, "action=" + intent.getAction());
-            notifyListeners();
+            if ( mConfig.showVolteIcon ) {
+                notifyListeners();
+            }
         }
     };
 
@@ -818,6 +814,7 @@ public class MobileSignalController extends SignalController<
         boolean userSetup;
         boolean roaming;
         boolean defaultDataOff;  // Tracks the on/off state of the defaultDataSubscription
+        boolean imsResitered;
 
         @Override
         public void copyFrom(State s) {
@@ -834,6 +831,7 @@ public class MobileSignalController extends SignalController<
             userSetup = state.userSetup;
             roaming = state.roaming;
             defaultDataOff = state.defaultDataOff;
+            imsResitered = state.imsResitered;
         }
 
         @Override
@@ -852,6 +850,7 @@ public class MobileSignalController extends SignalController<
                     .append(',');
             builder.append("userSetup=").append(userSetup).append(',');
             builder.append("defaultDataOff=").append(defaultDataOff);
+            builder.append("imsResitered=").append(imsResitered);
         }
 
         @Override
@@ -867,7 +866,8 @@ public class MobileSignalController extends SignalController<
                     && ((MobileState) o).userSetup == userSetup
                     && ((MobileState) o).isDefault == isDefault
                     && ((MobileState) o).roaming == roaming
-                    && ((MobileState) o).defaultDataOff == defaultDataOff;
+                    && ((MobileState) o).defaultDataOff == defaultDataOff
+                    && ((MobileState) o).imsResitered == imsResitered;
         }
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java
index 5b3c3a38c56..ee730a2aca8 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/NetworkControllerImpl.java
@@ -1198,6 +1198,7 @@ public class NetworkControllerImpl extends BroadcastReceiver
         boolean hspaDataDistinguishable;
         boolean inflateSignalStrengths = false;
         boolean alwaysShowDataRatIcon = false;
+        boolean showVolteIcon;
 
         static Config readConfig(Context context) {
             Config config = new Config();
@@ -1228,6 +1229,7 @@ public class NetworkControllerImpl extends BroadcastReceiver
                         CarrierConfigManager.KEY_HIDE_LTE_PLUS_DATA_ICON_BOOL);
             }
 
+            config.showVolteIcon = res.getBoolean(R.bool.config_display_volte);
             return config;
         }
     }
-- 
2.25.1


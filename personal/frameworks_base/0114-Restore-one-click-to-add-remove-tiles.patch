From 905ed53efa902d4b14485d46c2262e240c94a162 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Wed, 23 Dec 2020 14:49:47 -0500
Subject: [PATCH 114/230] Restore one-click to add/remove tiles

  from
  https://github.com/ezio84/abc_frameworks_base/commit/e63e8e39ab141b8ba9ef37994b9ababc5647232b
---
 .../systemui/qs/customize/TileAdapter.java    | 28 ++++++++++++++-----
 1 file changed, 21 insertions(+), 7 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/qs/customize/TileAdapter.java b/packages/SystemUI/src/com/android/systemui/qs/customize/TileAdapter.java
index 55c7f14b244..be5fe0e7a80 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/customize/TileAdapter.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/customize/TileAdapter.java
@@ -89,7 +89,7 @@ public class TileAdapter extends RecyclerView.Adapter<Holder> implements TileSta
     private int mAccessibilityFromIndex;
     private QSTileHost mHost;
     private final UiEventLogger mUiEventLogger;
-    private final AccessibilityDelegateCompat mAccessibilityDelegate;
+    //private final AccessibilityDelegateCompat mAccessibilityDelegate;
     private RecyclerView mRecyclerView;
 
     public TileAdapter(Context context, UiEventLogger uiEventLogger) {
@@ -98,7 +98,7 @@ public class TileAdapter extends RecyclerView.Adapter<Holder> implements TileSta
         mItemTouchHelper = new ItemTouchHelper(mCallbacks);
         mDecoration = new TileItemDecoration(context);
         mMinNumTiles = context.getResources().getInteger(R.integer.quick_settings_min_num_tiles);
-        mAccessibilityDelegate = new TileAdapterDelegate();
+        //mAccessibilityDelegate = new TileAdapterDelegate();
     }
 
     @Override
@@ -317,13 +317,27 @@ public class TileAdapter extends RecyclerView.Adapter<Holder> implements TileSta
 
         holder.mTileView.handleStateChanged(info.state);
         holder.mTileView.setShowAppLabel(position > mEditIndex && !info.isSystem);
-        holder.mTileView.setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_YES);
+        /*holder.mTileView.setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_YES);
         holder.mTileView.setClickable(true);
         holder.mTileView.setOnClickListener(null);
         holder.mTileView.setFocusable(true);
-        holder.mTileView.setFocusableInTouchMode(true);
+        holder.mTileView.setFocusableInTouchMode(true);*/
+
+        holder.mTileView.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                int position = holder.getLayoutPosition();
+                if (position < mEditIndex) {
+                    if (canRemoveTiles()) {
+                        move(position, mEditIndex);
+                    }
+                } else {
+                    move(position, mEditIndex);
+                }
+            }
+        });
 
-        if (mAccessibilityAction != ACTION_NONE) {
+        /*if (mAccessibilityAction != ACTION_NONE) {
             holder.mTileView.setClickable(selectable);
             holder.mTileView.setFocusable(selectable);
             holder.mTileView.setFocusableInTouchMode(selectable);
@@ -345,7 +359,7 @@ public class TileAdapter extends RecyclerView.Adapter<Holder> implements TileSta
         }
         if (position == mFocusIndex) {
             focusOnHolder(holder);
-        }
+        }*/
     }
 
     private void focusOnHolder(Holder holder) {
@@ -502,7 +516,7 @@ public class TileAdapter extends RecyclerView.Adapter<Holder> implements TileSta
                 mTileView.setBackground(null);
                 mTileView.getIcon().disableAnimation();
                 mTileView.setTag(this);
-                ViewCompat.setAccessibilityDelegate(mTileView, mAccessibilityDelegate);
+                //ViewCompat.setAccessibilityDelegate(mTileView, mAccessibilityDelegate);
             }
         }
 
-- 
2.25.1

